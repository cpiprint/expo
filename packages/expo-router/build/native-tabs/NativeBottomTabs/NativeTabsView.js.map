{"version":3,"file":"NativeTabsView.js","sourceRoot":"","sources":["../../../src/native-tabs/NativeBottomTabs/NativeTabsView.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useDeferredValue, useEffect, useMemo, useState } from 'react';\nimport type { ImageSourcePropType } from 'react-native';\nimport {\n  BottomTabs,\n  BottomTabsScreen,\n  featureFlags,\n  type BottomTabsProps,\n  type BottomTabsScreenProps,\n} from 'react-native-screens';\nimport type { SFSymbol } from 'sf-symbols-typescript';\n\nimport {\n  SUPPORTED_BLUR_EFFECTS,\n  SUPPORTED_TAB_BAR_ITEM_LABEL_VISIBILITY_MODES,\n  SUPPORTED_TAB_BAR_MINIMIZE_BEHAVIORS,\n  type NativeTabOptions,\n  type NativeTabsViewProps,\n} from './types';\nimport { shouldTabBeVisible } from './utils';\n\n// We let native tabs to control the changes. This requires freeze to be disabled for tab bar.\n// Otherwise user may see glitches when switching between tabs.\nfeatureFlags.experiment.controlledBottomTabs = false;\n\nexport function NativeTabsView(props: NativeTabsViewProps) {\n  const { builder, style, minimizeBehavior, disableIndicator, focusedIndex } = props;\n  const { state, descriptors, navigation } = builder;\n  const { routes } = state;\n\n  const deferredFocusedIndex = useDeferredValue(focusedIndex);\n\n  const children = routes\n    .map((route, index) => ({ route, index }))\n    .filter(({ route: { key } }) => shouldTabBeVisible(descriptors[key].options))\n    .map(({ route, index }) => {\n      const descriptor = descriptors[route.key];\n      const isFocused = index === deferredFocusedIndex;\n\n      return (\n        <Screen\n          key={route.key}\n          routeKey={route.key}\n          name={route.name}\n          descriptor={descriptor}\n          isFocused={isFocused}\n          style={style}\n        />\n      );\n    });\n\n  return (\n    <BottomTabsWrapper\n      tabBarItemTitleFontColor={style?.color}\n      tabBarItemTitleFontFamily={style?.fontFamily}\n      tabBarItemTitleFontSize={style?.fontSize}\n      // Only string values are accepted by screens\n      tabBarItemTitleFontWeight={\n        style?.fontWeight\n          ? (String(style.fontWeight) as `${NonNullable<(typeof style)['fontWeight']>}`)\n          : undefined\n      }\n      tabBarItemTitleFontStyle={style?.fontStyle}\n      tabBarBackgroundColor={style?.backgroundColor}\n      tabBarTintColor={style?.tintColor}\n      tabBarItemRippleColor={style?.rippleColor}\n      tabBarItemLabelVisibilityMode={style?.labelVisibilityMode}\n      tabBarItemIconColor={style?.iconColor}\n      tabBarItemIconColorActive={style?.['&:active']?.iconColor ?? style?.tintColor}\n      tabBarItemTitleFontColorActive={style?.['&:active']?.color ?? style?.tintColor}\n      tabBarItemTitleFontSizeActive={style?.['&:active']?.fontSize}\n      tabBarItemActiveIndicatorColor={style?.['&:active']?.indicatorColor}\n      tabBarItemActiveIndicatorEnabled={!disableIndicator}\n      tabBarMinimizeBehavior={minimizeBehavior}\n      onNativeFocusChange={({ nativeEvent: { tabKey } }) => {\n        const descriptor = descriptors[tabKey];\n        const route = descriptor.route;\n        navigation.dispatch({\n          type: 'JUMP_TO',\n          target: state.key,\n          payload: {\n            name: route.name,\n          },\n        });\n      }}>\n      {children}\n    </BottomTabsWrapper>\n  );\n}\n\nfunction Screen(props: {\n  routeKey: string;\n  name: string;\n  descriptor: NativeTabsViewProps['builder']['descriptors'][string];\n  isFocused: boolean;\n  style: NativeTabsViewProps['style'];\n}) {\n  const { routeKey, name, descriptor, isFocused, style } = props;\n  const title = descriptor.options.title ?? name;\n\n  if (style?.blurEffect && !supportedBlurEffectsSet.has(style.blurEffect)) {\n    throw new Error(\n      `Unsupported blurEffect: ${style.blurEffect}. Supported values are: ${SUPPORTED_BLUR_EFFECTS.map((effect) => `\"${effect}\"`).join(', ')}`\n    );\n  }\n\n  const baseAppearance = {\n    tabBarItemTitlePositionAdjustment: style?.titlePositionAdjustment,\n    tabBarBlurEffect: style?.blurEffect,\n    tabBarItemBadgeBackgroundColor: style?.badgeBackgroundColor,\n  };\n\n  const appearance = {\n    inline: {\n      normal: baseAppearance,\n      selected: baseAppearance,\n      focused: baseAppearance,\n      disabled: baseAppearance,\n    },\n    stacked: {\n      normal: baseAppearance,\n      selected: baseAppearance,\n      focused: baseAppearance,\n      disabled: baseAppearance,\n    },\n  };\n\n  const icon = useAwaitedScreensIcon(descriptor.options.icon);\n  const selectedIcon = useAwaitedScreensIcon(descriptor.options.selectedIcon);\n\n  return (\n    <BottomTabsScreen\n      {...descriptor.options}\n      tabBarItemBadgeBackgroundColor={style?.badgeBackgroundColor}\n      tabBarItemBadgeTextColor={style?.badgeTextColor}\n      standardAppearance={appearance}\n      scrollEdgeAppearance={appearance}\n      iconResourceName={descriptor.options.icon?.drawable}\n      icon={icon}\n      selectedIcon={icon ? selectedIcon : undefined}\n      title={title}\n      freezeContents={false}\n      tabKey={routeKey}\n      isFocused={isFocused}>\n      {descriptor.render()}\n    </BottomTabsScreen>\n  );\n}\n\ninterface AwaitedIcon {\n  sf?: SFSymbol;\n  src?: ImageSourcePropType;\n  drawable?: string;\n}\n\nfunction useAwaitedScreensIcon(icon: NativeTabOptions['icon']) {\n  const isAwaited = isAwaitedIcon(icon);\n  const [awaitedIcon, setAwaitedIcon] = useState<AwaitedIcon | undefined>(\n    isAwaited ? icon : undefined\n  );\n  const screensIcon = useMemo(() => convertOptionsIconToPropsIcon(awaitedIcon), [awaitedIcon]);\n\n  useEffect(() => {\n    const loadIcon = async () => {\n      if (icon && 'src' in icon && icon.src instanceof Promise) {\n        const currentAwaitedIcon = { src: await icon.src };\n        setAwaitedIcon(currentAwaitedIcon);\n      }\n    };\n    loadIcon();\n  }, [icon]);\n\n  return screensIcon;\n}\n\nfunction isAwaitedIcon(icon: NativeTabOptions['icon']): icon is AwaitedIcon {\n  return !icon || !('src' in icon && icon.src instanceof Promise);\n}\n\nfunction convertOptionsIconToPropsIcon(\n  icon: AwaitedIcon | undefined\n): BottomTabsScreenProps['icon'] {\n  if (!icon) {\n    return undefined;\n  }\n  if ('sf' in icon && icon.sf) {\n    return { sfSymbolName: icon.sf };\n  } else if ('src' in icon && icon.src) {\n    return { templateSource: icon.src };\n  }\n  return undefined;\n}\n\nconst supportedTabBarMinimizeBehaviorsSet = new Set<string>(SUPPORTED_TAB_BAR_MINIMIZE_BEHAVIORS);\nconst supportedTabBarItemLabelVisibilityModesSet = new Set<string>(\n  SUPPORTED_TAB_BAR_ITEM_LABEL_VISIBILITY_MODES\n);\nconst supportedBlurEffectsSet = new Set<string>(SUPPORTED_BLUR_EFFECTS);\n\nfunction BottomTabsWrapper(props: BottomTabsProps) {\n  const { tabBarMinimizeBehavior, tabBarItemLabelVisibilityMode, ...rest } = props;\n  if (tabBarMinimizeBehavior && !supportedTabBarMinimizeBehaviorsSet.has(tabBarMinimizeBehavior)) {\n    throw new Error(\n      `Unsupported minimizeBehavior: ${tabBarMinimizeBehavior}. Supported values are: ${SUPPORTED_TAB_BAR_MINIMIZE_BEHAVIORS.map((behavior) => `\"${behavior}\"`).join(', ')}`\n    );\n  }\n  if (\n    tabBarItemLabelVisibilityMode &&\n    !supportedTabBarItemLabelVisibilityModesSet.has(tabBarItemLabelVisibilityMode)\n  ) {\n    throw new Error(\n      `Unsupported labelVisibilityMode: ${tabBarItemLabelVisibilityMode}. Supported values are: ${SUPPORTED_TAB_BAR_ITEM_LABEL_VISIBILITY_MODES.map((mode) => `\"${mode}\"`).join(', ')}`\n    );\n  }\n\n  return (\n    <BottomTabs\n      tabBarItemLabelVisibilityMode={tabBarItemLabelVisibilityMode}\n      tabBarMinimizeBehavior={tabBarMinimizeBehavior}\n      {...rest}\n    />\n  );\n}\n"]}