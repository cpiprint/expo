{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/next/index.ts"],"names":[],"mappings":"AAAA,OAAO,oBAAoB,MAAM,wBAAwB,CAAC;AAC1D,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AAExC,MAAM,OAAO,KAAM,SAAQ,oBAAoB,CAAC,KAAK;IACnD,MAAM,CAAC,MAAM,CAAC,QAAgB,EAAE,KAAa;QAC3C,OAAO,oBAAoB,CAAC,WAAW,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;IAC3D,CAAC;IACD,MAAM,CAAC,UAAU,CAAC,MAAoB;QACpC,OAAO,oBAAoB,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;IACvD,CAAC;CACF;AAED,MAAM,OAAO,KAAM,SAAQ,oBAAoB,CAAC,KAAK;IACnD,MAAM,CAAC,MAAM,CACX,IAAY,EACZ,UAA8B,EAC9B,aAAsB,IAAI;QAE1B,IAAI,QAAQ,CAAC,EAAE,KAAK,KAAK,EAAE,CAAC;YAC1B,OAAO,oBAAoB,CAAC,WAAW,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QAC5D,CAAC;QACD,OAAO,oBAAoB,CAAC,WAAW,CAAC,IAAI,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;IACxE,CAAC;IACD,MAAM,CAAC,UAAU,CAAC,MAAoB,EAAE,eAAwB,KAAK;QACnE,IAAI,QAAQ,CAAC,EAAE,KAAK,KAAK,EAAE,CAAC;YAC1B,OAAO,oBAAoB,CAAC,gBAAgB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;QACrE,CAAC;aAAM,CAAC;YACN,OAAO,oBAAoB,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QACvD,CAAC;IACH,CAAC;IACD,MAAM,CAAC,MAAM;QACX,OAAO,oBAAoB,CAAC,YAAY,EAAE,CAAC;IAC7C,CAAC;CACF","sourcesContent":["import ExpoMediaLibraryNext from './ExpoMediaLibraryNext';\nimport { Platform } from 'react-native';\n\nexport class Asset extends ExpoMediaLibraryNext.Asset {\n  static create(filePath: string, album?: Album): Promise<Asset> {\n    return ExpoMediaLibraryNext.createAsset(filePath, album);\n  }\n  static deleteMany(assets: Array<Asset>): Promise<void> {\n    return ExpoMediaLibraryNext.deleteManyAssets(assets);\n  }\n}\n\nexport class Album extends ExpoMediaLibraryNext.Album {\n  static create(\n    name: string,\n    assetsRefs: string[] | Asset[],\n    moveAssets: boolean = true\n  ): Promise<Album> {\n    if (Platform.OS === 'ios') {\n      return ExpoMediaLibraryNext.createAlbum(name, assetsRefs);\n    }\n    return ExpoMediaLibraryNext.createAlbum(name, assetsRefs, moveAssets);\n  }\n  static deleteMany(albums: Array<Album>, deleteAssets: Boolean = false): Promise<void> {\n    if (Platform.OS === 'ios') {\n      return ExpoMediaLibraryNext.deleteManyAlbums(albums, deleteAssets);\n    } else {\n      return ExpoMediaLibraryNext.deleteManyAlbums(albums);\n    }\n  }\n  static getAll(): Promise<Array<Album>> {\n    return ExpoMediaLibraryNext.getAllAlbums();\n  }\n}\n"]}