{"version":3,"file":"animation.js","sourceRoot":"","sources":["../../../src/swift-ui/modifiers/animation.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,GAAG,CAAC;AAoCnC,MAAM,CAAC,MAAM,SAAS,GAAG;IACvB,SAAS,EAAE,CAAC,QAAiB,EAAmB,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,CAAC;IACpF,MAAM,EAAE,CAAC,QAAiB,EAAmB,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC;IAC9E,OAAO,EAAE,CAAC,QAAiB,EAAmB,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC;IAChF,MAAM,EAAE,CAAC,QAAiB,EAAmB,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC;IAE9E,uDAAuD;IACvD,MAAM,EAAE,CACN,QAAiB,EACjB,eAAwB,EACxB,aAAsB,EACL,EAAE,CAAC,CAAC;QACrB,IAAI,EAAE,QAAQ;QACd,QAAQ;QACR,eAAe;QACf,aAAa;KACd,CAAC;IAEF,8CAA8C;IAC9C,cAAc,EAAE,CACd,QAAiB,EACjB,MAAe,EACf,aAAsB,EACL,EAAE,CAAC,CAAC;QACrB,IAAI,EAAE,QAAQ;QACd,QAAQ;QACR,MAAM;QACN,aAAa;KACd,CAAC;IAEF,wEAAwE;IACxE,mBAAmB,EAAE,CACnB,IAAa,EACb,SAAkB,EAClB,OAAgB,EAChB,eAAwB,EACM,EAAE,CAAC,CAAC;QAClC,IAAI,EAAE,qBAAqB;QAC3B,IAAI;QACJ,SAAS;QACT,OAAO;QACP,eAAe;KAChB,CAAC;IAEF,iDAAiD;IACjD,2BAA2B,EAAE,CAC3B,QAAiB,EACjB,MAAe,EACf,eAAwB,EACM,EAAE,CAAC,CAAC;QAClC,IAAI,EAAE,qBAAqB;QAC3B,QAAQ;QACR,MAAM;QACN,eAAe;KAChB,CAAC;IAEF,OAAO,EAAE,EAAE,IAAI,EAAE,SAAS,EAAsB;CACjD,CAAC;AAEF,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,eAAgC,EAAE,aAA+B,EAAE,EAAE,CAC7F,cAAc,CAAC,WAAW,EAAE,EAAE,SAAS,EAAE,eAAe,EAAE,aAAa,EAAE,CAAC,CAAC;AAE7E,MAAM,CAAC,MAAM,SAAS,GAAG,CACvB,SAAY,EACZ,KAAa,EACU,EAAE,CAAC,CAAC,EAAE,GAAG,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;AAEtD,MAAM,CAAC,MAAM,UAAU,GAAG,CACxB,SAAY,EACZ,KAAa,EACb,YAAsB,EAC+B,EAAE,CAAC,CAAC;IACzD,GAAG,SAAS;IACZ,WAAW,EAAE,KAAK;IAClB,YAAY;CACb,CAAC,CAAC","sourcesContent":["import { createModifier } from '.';\n\nexport type TimingAnimation = {\n  type: 'easeInOut' | 'easeIn' | 'easeOut' | 'linear';\n  duration?: number;\n};\n\nexport type SpringAnimation = {\n  type: 'spring';\n  response?: number;\n  dampingFraction?: number;\n  blendDuration?: number;\n  duration?: number;\n  bounce?: number;\n};\n\nexport type InterpolatingSpringAnimation = {\n  type: 'interpolatingSpring';\n  mass?: number;\n  stiffness?: number;\n  damping?: number;\n  initialVelocity?: number;\n  duration?: number;\n  bounce?: number;\n};\n\nexport type DefaultAnimation = {\n  type: 'default';\n};\n\nexport type AnimationObject =\n  | TimingAnimation\n  | SpringAnimation\n  | InterpolatingSpringAnimation\n  | DefaultAnimation;\n\nexport const Animation = {\n  easeInOut: (duration?: number): TimingAnimation => ({ type: 'easeInOut', duration }),\n  easeIn: (duration?: number): TimingAnimation => ({ type: 'easeIn', duration }),\n  easeOut: (duration?: number): TimingAnimation => ({ type: 'easeOut', duration }),\n  linear: (duration?: number): TimingAnimation => ({ type: 'linear', duration }),\n\n  // spring animations - response/dampingFraction variant\n  spring: (\n    response?: number,\n    dampingFraction?: number,\n    blendDuration?: number\n  ): SpringAnimation => ({\n    type: 'spring',\n    response,\n    dampingFraction,\n    blendDuration,\n  }),\n\n  // spring animations - duration/bounce variant\n  springDuration: (\n    duration?: number,\n    bounce?: number,\n    blendDuration?: number\n  ): SpringAnimation => ({\n    type: 'spring',\n    duration,\n    bounce,\n    blendDuration,\n  }),\n\n  // interpolating spring - physics-based variant (mass/stiffness/damping)\n  interpolatingSpring: (\n    mass?: number,\n    stiffness?: number,\n    damping?: number,\n    initialVelocity?: number\n  ): InterpolatingSpringAnimation => ({\n    type: 'interpolatingSpring',\n    mass,\n    stiffness,\n    damping,\n    initialVelocity,\n  }),\n\n  // interpolating spring - duration/bounce variant\n  interpolatingSpringDuration: (\n    duration?: number,\n    bounce?: number,\n    initialVelocity?: number\n  ): InterpolatingSpringAnimation => ({\n    type: 'interpolatingSpring',\n    duration,\n    bounce,\n    initialVelocity,\n  }),\n\n  default: { type: 'default' } as DefaultAnimation,\n};\n\nexport const animation = (animationObject: AnimationObject, animatedValue: number | boolean) =>\n  createModifier('animation', { animation: animationObject, animatedValue });\n\nexport const withDelay = <T extends AnimationObject>(\n  animation: T,\n  delay: number\n): T & { delay: number } => ({ ...animation, delay });\n\nexport const withRepeat = <T extends AnimationObject>(\n  animation: T,\n  count: number,\n  autoreverses?: boolean\n): T & { repeatCount: number; autoreverses?: boolean } => ({\n  ...animation,\n  repeatCount: count,\n  autoreverses,\n});\n"]}